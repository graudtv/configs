"--------------- Useful functions/commands ---------------"

" Display already existing tab symbols as 8 spaces
" Expand newly entered tabs into 2 spaces
command IndentWithSpaces
  \ set tabstop=8 expandtab softtabstop=2 shiftwidth=2

" Display tabs as 4 spaces
" Pressing tab or shifting inserts tab symbol (not 4 spaces)
command IndentWithTabs
  \ set tabstop=4 softtabstop=4 shiftwidth=4 noexpandtab

" Open terminal in the current window
command Eterm
  \ term ++curwin

" In normal mode (:Run) runs the whole file as vim9 script
" In visual mode ('<,'>:Run) runs the selected lines as vim9 script
command -range=% Run
  \ vim9 :<line1>,<line2>source

" Even more quick mapping to run vim-script
map \r :Run<CR>

"--------------- General settings ---------------"
" Display settings
set number                     " Line numbers
set rnu                        " Relative line numbers. rnu + number ->
                               " also shows abs index of current line
set cursorline                 " Highlight the current line
set colorcolumn=80             " Ruler (higlight 80-th column)
set noshowmode                 " Don't show current mode (insert/replace/etc),
                               " because airline plugin does this
set noruler                    " Don't show (line, colon) in the bottom menu,
                               " because airline plugin does this
set showcmd                    " Show 'count' when entering commands like 10gg
set helpheight=80              " Make :help window take the whole screen
set sidescroll=1               " Scroll long lines by one symbol
set sidescrolloff=0            " Start scrolling long lines at specified.
                               " offset. (default value ensured)
" Text wrapping settings
set nowrap                     " Disable wrapping by default
set breakindent                " Keep indentation when wrapping
set showbreak=>>               " Prefix to be printed when wrapping lines
set linebreak                  " Wrap lines on word boundaries
" Windows' settings
set splitbelow                 " Open new window below, not above
set splitright                 " Open new window to the right, not to the left
set winheight=20               " Use at least winheight rows for window
set winwidth=84                " Use at least winwidth columns for window
" Search settings
set hlsearch                   " Highlight search results
set noincsearch                " Cursor behaves really odd under incremental
                               " search, disable it
set nowrapscan                 " Wrapping makes it hard to follow the cursor
set ignorecase smartcase       " More convenient search
" Command-line completion settings
set wildmenu                   " Enable pop-up menu in command mode (useful
                               " when entering filenames/options/etc)
set wildmode=longest,list      " Bash-like completion style for wildmenu
" Indentation and formatting settings
set textwidth=78               " Automatically break too long lines
set formatoptions-=r           " Don't continue comment when pressing Enter
                               " in insert mode within comment
set formatoptions-=o           " Don't continue comment when pressing o/O
                               " withing comment
set autoindent smartindent     " Automatically insert indents (when starting
                               " new line or similar)
IndentWithSpaces               " I prefer spaces to tabs
" Other settings
set backspace=indent,eol,start " Enable backspace in insert mode
set hidden                     " Allow hidding modified buffer
set timeout                    " Enable timeouts
set timeoutlen=1000            " Timeout for key bindings (ms)
set ttimeoutlen=50             " Timeout for multi-character key codes (ms)
set modeline                   " Read mode line if there's such one in a file
set cryptmethod=blowfish2      " Decent encryption method (for 'vim -x ...')
set nofixendofline             " Don't add eol if file doesn't have it
" TODO: fix representation of tab names (tabline)


"--------------- pre-config for vim-plug plugins  ---------------"
" enable normal expansion of brackets and parentheses
" let delimitMate_expand_cr = 1
" let delimitMate_expand_space = 1

"--------------- vim-plug plugins ---------------"
call plug#begin('~/.vim/plugged')
" easymotion -- quick moving inside text
Plug 'easymotion/vim-easymotion'

" easyescape -- helps to get rid of undesired visual effects when
" using 'fd'/'fj' or similar sequence to escape insert mode
Plug 'zhou13/vim-easyescape'

" bufexplorer - convenient buffer switching window
Plug 'jlanzarotta/bufexplorer'

" gruvbox -- cool color scheme
Plug 'morhetz/gruvbox'

" airline - nice status line at the bottom of the screen
Plug 'vim-airline/vim-airline'

" vim-airline-themes - additional airline themes
Plug 'vim-airline/vim-airline-themes'

" nerdtree -- file tree viewer
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }

" ctrlp - fuzzy search file/buffer/tag
Plug 'ctrlpvim/ctrlp.vim'

" tagbar - display tags
" Plug 'preservim/tagbar'

" AutoComplPop -- automatically opens popup menu for completions
"                 in insert mode
" Plug 'vim-scripts/AutoComplPop' 

"Plug 'https://github.com/Raimondi/delimitMate'
"Plug 'junegunn/vim-easy-align'
"Plug 'jiangmiao/auto-pairs'
"Plug https://github.com/ervandew/supertab
call plug#end()


"--------------- plugins configuration ---------------"
"----- easymotion -----"
map <Leader> <Plug>(easymotion-prefix)
map gs <Plug>(easymotion-s)
map gl <Plug>(easymotion-bd-jk)
map gw <Plug>(easymotion-bd-w)
map ge <Plug>(easymotion-bd-e)

"----- easyescape -----"
let g:easyescape_chars = { "f": 1, "j": 1 }
let g:easyescape_timeout = 2000
cnoremap fj <ESC>

"----- bufexplorer -----"
let g:bufExplorerShowNoName=1        " Show no-name buffers

"----- gruvbox -----"
colorscheme gruvbox
set background=dark

"----- nerdtree -----"
map <C-n> :NERDTreeToggle<CR>
" Make ENTER key inside NERDTree window work like 'go', not like 'o'
let NERDTreeCustomOpenArgs = {'file': {'reuse':'currenttab', 'where':'p', 'keepopen':1, 'stay':1}}
" TODO: unmap J & K keys
"" call NERDTreeAddKeyMap({ 'key': 'K', 'callback': {-> feedkeys("\<C-d>", 'int')}, 'override': 1})

"----- ctrlp -----"
" search only through git files
let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files -co --exclude-standard']

"--------------- raw custom bindings ---------------"
noremap <Space> <C-d>|          " Show next half-page of file
noremap J <C-d>|                " Show next half-page of file
noremap K <C-u>|                " Show previous half-page of file
noremap <C-j> <C-e>|            " Show next line of file, don't move cursor
noremap <C-k> <C-y>|            " Show previous line of file, don't move cursor
noremap ยง `|                    " On MacBook keyboard '`' key has different
                                " position from most of keyboards; instead,
                                " 'ยง' key is located where '`' is expected to be

"--------------- raw custom commands ---------------"
