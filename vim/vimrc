"--------------- General settings ---------------"
" display settings
set number                     " line numbers
set rnu                        " relative line numbers. rnu + numbers ->
                               " also shows abs index of current line
set cursorline                 " highlight the current line
set colorcolumn=80             " ruler (higlight 80-th column)
set showmode                   " show current mode (insert/replace/etc)
set ruler                      " show (line, colon) in the bottom menu
set showcmd                    " show 'count' when entering commands like 10gg
set showbreak=~~~              " prefix printed when wrapping lines
set helpheight=80              " make :help window take the whole screen
" search settings
set hlsearch                   " highlight search results
set noincsearch                " cursor behaves really odd under incremental
                               " search, disable it
set nowrapscan                 " wrapping makes it hard to follow the cursor
set ignorecase smartcase       " more convenient search
set wildmenu                   " pop-menu when searching files
" other settings
set timeout                    " enable timeouts
set timeoutlen=1000            " timeout for key bindings (ms)
set ttimeoutlen=50             " timeout for multi-character key codes (ms)

au BufEnter * set fo-=c fo-=r fo-=o " disable automatic comment insertion

function! IndentWithTabs()
  set tabstop=4     " Size of a hard tabstop (ts).
  set shiftwidth=4  " Size of an indentation (sw).
  set noexpandtab   " Always uses tabs instead of space characters (noet).
  set autoindent    " Copy indent from current line when starting a new line (ai).
endfunction

function! IndentWithSpaces()
  set tabstop=2     " Size of a hard tabstop (ts).
  set shiftwidth=2  " Size of an indentation (sw).
  set expandtab     " Always uses spaces instead of tab characters (et).
  set softtabstop=0 " Number of spaces a <Tab> counts for. When 0, featuer is off (sts).
  set autoindent    " Copy indent from current line when starting a new line.
  set smarttab      " Inserts blanks on a <Tab> key (as per sw, ts and sts).
endfunction
call IndentWithSpaces()

"--------------- pre-config for vim-plug plugins  ---------------"
" enable normal expansion of brackets and parentheses
let delimitMate_expand_cr = 1
let delimitMate_expand_space = 1

"--------------- vim-plug plugins ---------------"
call plug#begin('~/.vim/plugged')
" gruvbox -- color schemes
Plug 'morhetz/gruvbox'

" nerdtree -- viewing file tree inside vim
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }

" easymotion -- quickly moving inside text
Plug 'easymotion/vim-easymotion'

" AutoComplPop -- automatically opens popup menu for completions
"                 in insert mode
Plug 'vim-scripts/AutoComplPop' 

" easyescape -- helps to get rid of undesired visual effects when
"               using 'fd'/'fj' or similar sequence to escape insert mode
Plug 'zhou13/vim-easyescape'    " escaping insert mode with 'fj' sequence

Plug 'https://github.com/Raimondi/delimitMate'
"Plug 'junegunn/vim-easy-align'
"Plug 'jiangmiao/auto-pairs'
"Plug https://github.com/ervandew/supertab
call plug#end()


"--------------- plugins configuration ---------------"
"----- gruvbox -----"
colorscheme gruvbox
set background=dark

"----- nerdtree -----"
map <C-n> :NERDTreeToggle<CR>

"----- easymotion -----"
map <Leader> <Plug>(easymotion-prefix)
map gs <Plug>(easymotion-s)
map gl <Plug>(easymotion-bd-jk)
map gw <Plug>(easymotion-bd-wl)

"----- easyescape -----"
let g:easyescape_chars = { "f": 1, "j": 1 }
let g:easyescape_timeout = 2000
cnoremap fj <ESC>

"--------------- raw custom bindings ---------------"
map <Space> <C-d>
map J <C-d>
map K <C-u>
map <C-j> <C-e>
map <C-k> <C-y>
